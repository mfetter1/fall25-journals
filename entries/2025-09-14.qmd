---
title: "2025-09-14"
format:
  html: default
  pdf: default
params:
  course: "mc501"
  word_min: 450
  word_max: 500
  p1: 'Reflect on the metaphor introduced at the beginning of the chapter: walking into a conversation that’s already underway. Have you ever had that experience in real life (in class, online, or at work)? What happened when you did—or didn’t—take the time to listen first? How does that scenario relate to the role of the literature review in research? Why is it important to understand what’s already been said before adding your ideas?'
  p2: 'Think about a media-related topic that interests you (e.g., influencer culture, video game violence, media portrayals of mental health). Now imagine you are preparing to write a literature review on that topic. What kind of “gap” would you look for to justify a new study? Would it be a topical void, a contradiction, or an overlooked perspective? Why does that kind of gap matter in media research?'
  p3: 'In your own words, explain the difference between an annotated bibliography and a proper literature review. Why is that difference significant? Reflect on a time when you had to summarize multiple sources for a paper or project. Did you organize those sources thematically, or treat each one individually? Looking ahead, how will your approach change when writing your literature review?'
---

## Choose **one** prompt to answer

> **Prompt A:** `r params$p1`

> **Prompt B:** `r params$p2`

> **Prompt C:** `r params$p3`

---

## Response

<!-- RESPONSE-START -->
*Write your answer to **one** of the prompts here. Do not write anything else in this chapter.*
<!-- RESPONSE-END -->

---

## Word Count & Range Check

```{r}
#| echo: false
#| message: false
#| warning: false
get_response_text <- function() {
  f <- knitr::current_input()
  if (is.null(f) || !file.exists(f)) return("")
  x <- readLines(f, warn = FALSE)
  # Find the lines that EXACTLY match the start/end markers
  s <- grep("^<!-- RESPONSE-START -->$", x)
  e <- grep("^<!-- RESPONSE-END -->$", x)
  if (length(s) != 1 || length(e) != 1 || e <= s) return("")
  paste(x[(s + 1L):(e - 1L)], collapse = "\n")
}
count_words <- function(txt) {
  # Remove code blocks and inline code before counting
  txt <- gsub("```[\\s\\S]*?```", " ", txt, perl = TRUE)
  txt <- gsub("`[^`]*`", " ", txt, perl = TRUE)
  # Keep letters, numbers, spaces, hyphens, and apostrophes
  txt <- gsub("[^\\p{L}\\p{N}\\s'-]", " ", txt, perl = TRUE)
  # Split by whitespace and count non-empty words
  words <- unlist(strsplit(txt, "\\s+", perl = TRUE))
  words <- words[nzchar(words)]
  length(words)
}
txt <- get_response_text()
n <- count_words(txt)
minw <- as.integer(params$word_min)
maxw <- as.integer(params$word_max)
in_range <- n >= minw && n <= maxw
cat(sprintf("**Word count:** %d  \n", n))
cat(sprintf("**Required range (%s):** %d–%d words  \n",
            toupper(params$course), minw, maxw))
cat(if (in_range) "**Status:** ✅ In range\n" else "**Status:** ❌ Out of range\n")
```
